Each header field consists of a case-insensitive field name followed
    by a colon (":"), optional leading whitespace, the field value, and
    optional trailing whitespace.

   header-field = field-name ":" OWS field-value OWS

A proxy MUST forward unrecognized header fields unless the field-name
    is listed in the Connection header field or the proxy
    is specifically configured to block, or otherwise transform, such
    fields.  Other recipients SHOULD ignore unrecognized header fields.
    These requirements allow HTTP’s functionality to be enhanced without
    requiring prior update of deployed intermediaries.

The order in which header fields with differing field names are
   received is not significant.  However, it is good practice to send
   header fields that contain control data first, such as Host on
   requests and Date on responses, so that implementations can decide
   when not to handle a message as early as possible.  A server MUST NOT
   apply a request to the target resource until the entire request
   header section is received, since later header fields might include
   conditionals, authentication credentials, or deliberately misleading
   duplicate header fields that would impact request processing.

A sender MUST NOT generate multiple header fields with the same field
    name in a message unless either the entire field value for that
    header field is defined as a comma-separated list [i.e., #(values)]
    or the header field is a well-known exception (as noted below).
    A recipient MAY combine multiple header fields with the same field
    name into one "field-name: field-value" pair, without changing the
    semantics of the message, by appending each subsequent field value to
    the combined field value in order, separated by a comma.  The order
    in which header fields with the same field name are received is
    therefore significant to the interpretation of the combined field
    value; a proxy MUST NOT change the order of these field values when
    forwarding a message.

3.2.4.  Field Parsing
    Messages are parsed using a generic algorithm, independent of the
        individual header field names.  The contents within a given field
        value are not parsed until a later stage of message interpretation
        (usually after the message’s entire header section has been
        processed).  Consequently, this specification does not use ABNF rules
        to define each "Field-Name: Field Value" pair, as was done in
        previous editions.  Instead, this specification uses ABNF rules that
        are named according to each registered field name, wherein the rule
        defines the valid grammar for that field’s corresponding field values
        (i.e., after the field-value has been extracted from the header
        section by a generic field parser).

    No whitespace is allowed between the header field-name and colon.  In
        the past, differences in the handling of such whitespace have led to
        security vulnerabilities in request routing and response handling.  A
        server MUST reject any received request message that contains
        whitespace between a header field-name and colon with a response code
        of 400 (Bad Request).  A proxy MUST remove any such whitespace from a
        response message before forwarding the message downstream.

3.2.5.  Field Limits
    HTTP does not place a predefined limit on the length of each header
        field or on the length of the header section as a whole, as described
        in Section 2.5.  Various ad hoc limitations on individual header
        field length are found in practice, often depending on the specific
        field semantics.

    A server that receives a request header field, or set of fields,
        larger than it wishes to process MUST respond with an appropriate 4xx
        (Client Error) status code.  Ignoring such header fields would
        increase the server’s vulnerability to request smuggling attacks.
