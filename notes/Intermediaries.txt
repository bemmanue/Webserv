RFC 7230 p9

HTTP enables the use of intermediaries to satisfy requests through a
    chain of connections.  There are three common forms of HTTP
    intermediary: proxy, gateway, and tunnel.  In some cases, a single
    intermediary might act as an origin server, proxy, gateway, or
    tunnel, switching behavior based on the nature of each request.

The terms "upstream" and "downstream" are used to describe
    directional requirements in relation to the message flow: all
    messages flow from upstream to downstream.  The terms "inbound" and
    "outbound" are used to describe directional requirements in relation
    to the request route: "inbound" means toward the origin server and
    "outbound" means toward the user agent.

A "proxy" is a message-forwarding agent that is selected by the
    client, usually via local configuration rules, to receive requests
    for some type(s) of absolute URI and attempt to satisfy those
    requests via translation through the HTTP interface.  Some
    translations are minimal, such as for proxy requests for "http" URIs,
    whereas other requests might require translation to and from entirely
    different application-level protocols.  Proxies are often used to
    group an organization’s HTTP requests through a common intermediary
    for the sake of security, annotation services, or shared caching.
    Some proxies are designed to apply transformations to selected
    messages or payloads while they are being forwarded.

A "gateway" (a.k.a. "reverse proxy") is an intermediary that acts as
    an origin server for the outbound connection but translates received
    requests and forwards them inbound to another server or servers.
    Gateways are often used to encapsulate legacy or untrusted
    information services, to improve server performance through
    "accelerator" caching, and to enable partitioning or load balancing
    of HTTP services across multiple machines.

A "tunnel" acts as a blind relay between two connections without
   changing the messages.  Once active, a tunnel is not considered a
   party to the HTTP communication, though the tunnel might have been
   initiated by an HTTP request.  A tunnel ceases to exist when both
   ends of the relayed connection are closed.  Tunnels are used to
   extend a virtual connection through an intermediary, such as when
   Transport Layer Security (TLS, [RFC5246]) is used to establish
   confidential communication through a shared firewall proxy.

Intermediaries that process HTTP messages (i.e., all intermediaries
   other than those acting as tunnels) MUST send their own HTTP-version
   in forwarded messages.  In other words, they are not allowed to
   blindly forward the first line of an HTTP message without ensuring
   that the protocol version in that message matches a version to which
   that intermediary is conformant for both the receiving and sending of
   messages.  Forwarding an HTTP message without rewriting the
   HTTP-version might result in communication errors when downstream
   recipients use the message sender’s version to determine what
   features are safe to use for later communication with that sender.