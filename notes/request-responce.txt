RFC 7230 p8

A client sends an HTTP request to a server in the form of a request
    message, beginning with a request-line that includes a method, URI,
    and protocol version, followed by header fields
    containing request modifiers, client information, and representation
    metadata, an empty line to indicate the end of the
    header section, and finally a message body containing the payload
    body.

A server responds to a clientâ€™s request by sending one or more HTTP
   response messages, each beginning with a status line that includes
   the protocol version, a success or error code, and textual reason
   phrase, possibly followed by header fields containing
   server information, resource metadata, and representation metadata,
   an empty line to indicate the end of the header
   section, and finally a message body containing the payload body.

For example:
    a typical message exchange for a
    GET request on the URI "http://www.example.com/hello.txt":
    Client request:
        GET /hello.txt HTTP/1.1
        User-Agent: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3
        Host: www.example.com
        Accept-Language: en, mi

    Server response:
        HTTP/1.1 200 OK
        Date: Mon, 27 Jul 2009 12:28:53 GMT
        Server: Apache
        Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
        ETag: "34aa387-d-1568eb00"
        Accept-Ranges: bytes
        Content-Length: 51
        Vary: Accept-Encoding
        Content-Type: text/plain

        Hello World! My payload includes a trailing CRLF.

In theory, a client could receive requests and a server could receive
   responses, distinguishing them by their different start-line formats,
   but, in practice, servers are implemented to only expect a request (a
   response is interpreted as an unknown or invalid request method) and
   clients are implemented to only expect a response.

HTTP does not place a predefined limit on the length of a
  request-line, as described in Section 2.5.  A server that receives a
  method longer than any that it implements SHOULD respond with a 501
  (Not Implemented) status code.  A server that receives a
  request-target longer than any URI it wishes to parse MUST respond
  with a 414 (URI Too Long) status code (see Section 6.5.12 of
  [RFC7231]).
